<?php

/**
 * @file
 * Alters fields with multiple values.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function field_label_plurals_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.field_label_plurals':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The <em>Field Label Plurals</em> module provides the ability to configure seperate field labels for singular and plural, which are then used depending on the number of field values.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Displaying field labels') . '</dt>';
      $output .= '<dd>' . t("Field labels will be displayed using the <em>Field Label Plurals</em> setting on the field's manage settings page for any content type.") . '</dd>';
      $output .= '</dl>';

      return $output;
  }
}

/**
 * Implements hook_preprocess_field().
 */
function field_label_plurals_preprocess_field(&$variables) {
  if (isset($variables['element']['#items'])
      && method_exists($variables['element']['#items'], 'count')
      && $variables['element']['#items']->count() > 1) {
    $data = $variables['element']['#items']->getDataDefinition();

    $plural = $data->getThirdPartySetting('field_label_plurals', 'label_plural');
    if ($plural) {
      $variables['label'] = $plural;
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function field_label_plurals_form_field_config_edit_form_alter(&$form, $form_state, $form_id) {
  $entity = $form_state->getFormObject()->getEntity();

  // If the field is not allowed more than one value, or not allowed
  // unlimited values, then add the form field.
  if ($entity->getFieldStorageDefinition()->getCardinality() != 1
      && $entity->getFieldStorageDefinition()->getCardinality() != 0) {
    $form['#entity_builders'][] = 'field_label_plurals_set_settings';

    $form['label_plural'] = [
      '#type' => 'textfield',
      '#title' => t('Label to use for multiple values'),
      '#description' => t('A seperate label for when the field has more than one value.'),
      '#weight' => isset($form['label']['#weight']) ? ($form['label']['#weight'] + 1) : 0,
      '#default_value' => $entity->getThirdPartySetting('field_label_plurals', 'label_plural'),
      '#size' => 60,
      '#maxlength' => 200,
    ];
  }
}

/**
 * Entity builder to set the field settings.
 */
function field_label_plurals_set_settings($entity_type, $entity, &$form, FormStateInterface $form_state) {
  if ($form_state->getValue('label_plural')) {
    $entity->setThirdPartySetting('field_label_plurals', 'label_plural', $form_state->getValue('label_plural'));
  }
  else {
    $entity->unsetThirdPartySetting('field_label_plurals', 'label_plural');
  }
}
